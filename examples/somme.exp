let
  var N := 2
  var  s := "table"
  type intArray = array of int
  var row := intArray [ N ] of 0
  type stringArray = array of string
  var rowp := stringArray [ N ] of "table"
in
   1 = row[N] & row[2];
   N + 1 - row;
    N + 1 / row[2];
    N + 1 / row[2] + 1;
    N + 1 / row[2] + 1 * 2;
    N + 1 / row[2] + 1 * 2 - 3;
    N + 1 / row + 1;
    s <= "table";
    s < "table";
    s >= "table";
    s > "table";
    s = "table";
    s <> "table";
    s < "table" & s < "table";
    s < "table" & 1 + row;
    s >= "table" & 1 + row[2];
    s < "table" | 1 + row[2] * 2;
    s < "table" | 1 + row[N] * 2 - 3;
    s = s;
    s <= s;
    s < row | 1 + row[N];
    1 > s;
    1 > s | 1;
    s * 1;
    "rerere" > "a" | 2;
    row[2];
    row[2] * row;
    row[2] * row[N];
    row[2] * row[N] | 1;
    rowp[2] < "table";
    rowp[2] <= "table";
    rowp[2] > "table";
    rowp[2] >= "table";
    rowp[2] = "table";
    rowp[2] <> "table";
    rowp[2] < s;
    s <= rowp[2];
    row = row;
    row <> row;
    5 | row = row;
    row[4] + 1;
    row[4] + 1 * 2;
    row[4] < rowp[0]; 
    row[4] > rowp[0];
    row[4] <= rowp[0];
    row[4] >= rowp[0];
    row[4] = rowp[0];
    row[4] <> rowp[0];
    rowp[1] < row[0];
    rowp < "pois";
    rowp[1] > "pois";
    row / 2
end