let
    var M := 5;
    var N := 4;
    var P := 3;

in

    M := M + 5 - (P*2) + N

end

/*
               ;Enter  Program
HEAP_BASE      EQU     0x10000
               MOV     R11, R13 ;Mise à jour du Base Pointer
               MOV     R12, #HEAP_BASE ;On met l'adresse du tas dans R12
               MOV     R0, #5 ;Déclaration de la variable M
               STMFD   R13!,{R0} ;Ajout de la variable à la pile
               MOV     R0, #4 ;Déclaration de la variable N
               STMFD   R13!,{R0} ;Ajout de la variable à la pile
               MOV     R0, #3 ;Déclaration de la variable P
               STMFD   R13!,{R0} ;Ajout de la variable à la pile
               LDR     R0, [R11, #-12] ;On charge la valeur de P dans un registre
               MOV     R1, #2 ;On charge la valeur de l'entier dans un registre
               MOV     R2, #0;Initialisation du compteur
               BL      multiply_loop0 ;On entre dans la boucle multiplicative
suite0         ;On     passe à la suite
               MOV     R0, R2 ;On récupère le résultat
               LDR     R1, [R11, #-4] ;On charge la valeur de M dans un registre
               MOV     R2, #5 ;On charge la valeur de l'entier dans un registre
               SUB     R2, R2, R0 ;Soustraction
               LDR     R3, [R11, #-8] ;On charge la valeur de N dans un registre
               ADD     R2, R2, R3 ;Addition
               ADD     R1, R1, R2 ;Addition
               STR     R1, [R11, #-4] ;Sauvegarde du résultat
               END
               ;Exit   Program


multiply_loop0 ;Début  de la boucle multiplicative
               ADD     R2, R2, R0 ;i-ème addition de la multiplication
               SUBS    R1, R1, #1 ;Décrémentation du compteur
               BNE     multiply_loop0 ;Si le compteur n'est pas égal à 0, on recommence
               B       suite0 ;Sinon on passe à la suite du programme
*/